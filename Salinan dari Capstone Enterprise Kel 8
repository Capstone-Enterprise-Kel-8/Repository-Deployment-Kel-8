{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1y_eTLG1hJDVvIREim2YNECtdNrRMwedZ","timestamp":1714115732447}],"collapsed_sections":["6XR4EHZHbc0G","3CknrIgsbSuH","TwNFpgFvcjym","qVX9R1Ildja3","JRCtZgB0emS1","Dw9OlOWve8c1","RjurICBpQp0Y","iYlKmr-mVNuR","CRBYf15BPlis","3RbPIDSMG3qa","47lqNxcSH3Sx","8Chxsv5sIFqS","oBcSPdUSIOSX","H6mF0dYxITNA","rSXH0j-pIazG","Fpxrs2NXKRgN","1hsv-5PlKVo8","51Pz-PSTNiBm"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **TTEOKBEOKKI**"],"metadata":{"id":"VgN-vXeebLY2"}},{"cell_type":"markdown","source":["# **BUSINESS UNDERSTANDING**"],"metadata":{"id":"6XR4EHZHbc0G"}},{"cell_type":"markdown","source":["**Business Objective**"],"metadata":{"id":"w5a0Ld9_biQ2"}},{"cell_type":"markdown","source":["- Meningkatkan ketepatan dan efisiensi pendataan keuangan di kedai TTEOKBEOKKI dengan melakukan analisis data keuangan, mengidentifikasi pola-pola, dan memberikan rekomendasi untuk perbaikan proses pengelolaan keuangan."],"metadata":{"id":"nnTAKKmebwrl"}},{"cell_type":"markdown","source":["**Assess Situation**"],"metadata":{"id":"NLwzmQbJbzwm"}},{"cell_type":"markdown","source":["- Kedai TTEOKBEOKKI memiliki kebutuhan untuk meningkatkan ketepatan dan efisiensi dalam pendataan keuangan.\n","- Data keuangan kedai termasuk penjualan harian, pembelian bahan baku, pengeluaran operasional, dan lainnya.\n","- Proses pendataan keuangan saat ini mungkin rentan terhadap kesalahan manual, kelalaian, atau kekurangan dalam pengelolaan data."],"metadata":{"id":"Um6NOZK8b4ov"}},{"cell_type":"markdown","source":["**Data Mining Goals**"],"metadata":{"id":"6wRGtxQTb5od"}},{"cell_type":"markdown","source":["- Mengidentifikasi pola-pola dalam data keuangan, seperti tren penjualan, biaya operasional, dan profitabilitas.\n","- Mencari anomali atau kejadian yang tidak biasa dalam data yang dapat mengindikasikan masalah dalam pengelolaan keuangan.\n","- Mengembangkan model prediksi untuk memperkirakan permintaan produk, biaya operasional, atau pendapatan kedai di masa mendatang.\n","- Memberikan rekomendasi untuk meningkatkan ketepatan dan efisiensi pendataan keuangan, seperti otomatisasi proses, penggunaan perangkat lunak manajemen keuangan, atau pelatihan staf."],"metadata":{"id":"Hxgal56tcD5e"}},{"cell_type":"markdown","source":["**Project Plan**"],"metadata":{"id":"r8E4lwnocFHB"}},{"cell_type":"markdown","source":["\n","*   Data Collection and Preparation yaitu Mengumpulkan data keuangan dari kedai TTEOKBEOKKI, termasuk penjualan, pembelian, dan pengeluaran.\n","Membersihkan data untuk mengatasi missing values, outliers, dan kesalahan input.\n","*   Exploratory Data Analysis (EDA) yaitu Menganalisis statistik deskriptif dari data keuangan untuk memahami distribusi dan karakteristiknya.\n","Membuat visualisasi seperti grafik waktu untuk mengidentifikasi tren dan pola-pola dalam data.\n","*   Data Mining Techniques yaitu menggunakan teknik data mining seperti regresi, clustering, dan deteksi anomali untuk menggali informasi dari data keuangan. Menerapkan algoritma machine learning untuk mengembangkan model prediksi jika diperlukan.\n","*   Evaluation and Validation yaiut Mengevaluasi model dan analisis yang dibuat dengan menggunakan metrik yang relevan, seperti akurasi prediksi, kepekaan, atau nilai-nilai bisnis yang relevan. Melakukan validasi dengan membandingkan hasil prediksi dengan data aktual.\n","*   Recommendations and Implementation yaitu menghasilkan rekomendasi berdasarkan hasil analisis untuk meningkatkan ketepatan dan efisiensi pendataan keuangan. Mengimplementasikan rekomendasi yang diberikan, seperti memperbarui proses pendataan, melatih staf, atau mengadopsi perangkat lunak baru.\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","Monitoring and Maintenance yaitu memantau implementasi rekomendasi untuk memastikan efektivitasnya.\n","Melakukan pembaruan dan perbaikan secara berkala berdasarkan feedback dan perubahan dalam kebutuhan bisnis."],"metadata":{"id":"VYXq4tIIcIv1"}},{"cell_type":"markdown","source":["# **IMPORT LIBRARY**"],"metadata":{"id":"3CknrIgsbSuH"}},{"cell_type":"code","source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import plotly.express as px\n","import numpy as np"],"metadata":{"id":"MdyolmkSbX0z"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **DATA UNDERSTANDING**"],"metadata":{"id":"TwNFpgFvcjym"}},{"cell_type":"markdown","source":["### Collect Initial Data"],"metadata":{"id":"CJea7GmicoWG"}},{"cell_type":"code","source":["df = pd.read_csv('https://raw.githubusercontent.com/Capstone-Enterprise-Kel-8/Repository-Deployment-Kel-8/main/DATASET%20ENTERPRISE.csv')\n","\n","df"],"metadata":{"id":"djWLKk83cz-W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570257,"user_tz":-480,"elapsed":558,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"d2152d1b-6791-494d-fe28-c4326d9a79cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Tanggal           Nama Item Harga Satuan  Total Stok  Stok Terjual  \\\n","0    11/03/2024   Tteokbeokki Large  Rp35.000,00         250            80   \n","1    11/03/2024  Tteokbeokki Medium  Rp25.000,00         250           100   \n","2    11/03/2024   Tteokbeokki Small  Rp15.000,00         250            60   \n","3    11/03/2024          Corndo Ori  Rp20.000,00         150           120   \n","4    11/03/2024         Corndo Moza  Rp25.000,00          60            50   \n","..          ...                 ...          ...         ...           ...   \n","157  06/04/2024  Tteokbeokki Medium  Rp25.000,00         249            75   \n","158  06/04/2024   Tteokbeokki Small  Rp15.000,00         249            51   \n","159  06/04/2024          Corndo Ori  Rp20.000,00         137           137   \n","160  06/04/2024         Corndo Moza  Rp25.000,00          80            80   \n","161  06/04/2024            Sandwich  Rp25.000,00          25            25   \n","\n","     Sisa Stok Perkiraaan Pendapatan  \n","0           10        Rp2.800.000,00  \n","1           10        Rp2.500.000,00  \n","2           10          Rp900.000,00  \n","3           30        Rp2.400.000,00  \n","4           10        Rp1.250.000,00  \n","..         ...                   ...  \n","157          0        Rp1.875.000,00  \n","158          0          Rp765.000,00  \n","159          0        Rp2.740.000,00  \n","160          0        Rp2.000.000,00  \n","161          0          Rp625.000,00  \n","\n","[162 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-97b1619a-04aa-4fe0-ba21-9f993e883e16\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tanggal</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11/03/2024</td>\n","      <td>Tteokbeokki Large</td>\n","      <td>Rp35.000,00</td>\n","      <td>250</td>\n","      <td>80</td>\n","      <td>10</td>\n","      <td>Rp2.800.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11/03/2024</td>\n","      <td>Tteokbeokki Medium</td>\n","      <td>Rp25.000,00</td>\n","      <td>250</td>\n","      <td>100</td>\n","      <td>10</td>\n","      <td>Rp2.500.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11/03/2024</td>\n","      <td>Tteokbeokki Small</td>\n","      <td>Rp15.000,00</td>\n","      <td>250</td>\n","      <td>60</td>\n","      <td>10</td>\n","      <td>Rp900.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11/03/2024</td>\n","      <td>Corndo Ori</td>\n","      <td>Rp20.000,00</td>\n","      <td>150</td>\n","      <td>120</td>\n","      <td>30</td>\n","      <td>Rp2.400.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11/03/2024</td>\n","      <td>Corndo Moza</td>\n","      <td>Rp25.000,00</td>\n","      <td>60</td>\n","      <td>50</td>\n","      <td>10</td>\n","      <td>Rp1.250.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>06/04/2024</td>\n","      <td>Tteokbeokki Medium</td>\n","      <td>Rp25.000,00</td>\n","      <td>249</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>Rp1.875.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>06/04/2024</td>\n","      <td>Tteokbeokki Small</td>\n","      <td>Rp15.000,00</td>\n","      <td>249</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>Rp765.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>06/04/2024</td>\n","      <td>Corndo Ori</td>\n","      <td>Rp20.000,00</td>\n","      <td>137</td>\n","      <td>137</td>\n","      <td>0</td>\n","      <td>Rp2.740.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>06/04/2024</td>\n","      <td>Corndo Moza</td>\n","      <td>Rp25.000,00</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>Rp2.000.000,00</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>06/04/2024</td>\n","      <td>Sandwich</td>\n","      <td>Rp25.000,00</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>Rp625.000,00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>162 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97b1619a-04aa-4fe0-ba21-9f993e883e16')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97b1619a-04aa-4fe0-ba21-9f993e883e16 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97b1619a-04aa-4fe0-ba21-9f993e883e16');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-251e608b-1ac4-4461-8e60-9d5ca391a617\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-251e608b-1ac4-4461-8e60-9d5ca391a617')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-251e608b-1ac4-4461-8e60-9d5ca391a617 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 162,\n  \"fields\": [\n    {\n      \"column\": \"Tanggal\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"19/03/2024\",\n          \"24/03/2024\",\n          \"20/03/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Tteokbeokki Large\",\n          \"Tteokbeokki Medium\",\n          \"Sandwich\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Rp25.000,00\",\n          \"Rp20.000,00\",\n          \"Rp35.000,00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249,\n          237,\n          250\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 0,\n        \"max\": 156,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          71,\n          99,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          6,\n          4,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"Rp3.075.000,00\",\n          \"Rp325.000,00\",\n          \"Rp1.250.000,00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":159}]},{"cell_type":"markdown","source":["penjelasan"],"metadata":{"id":"WlbPPJpFcuel"}},{"cell_type":"markdown","source":["### Describe Data"],"metadata":{"id":"qVX9R1Ildja3"}},{"cell_type":"markdown","source":["**Informasi dasar**"],"metadata":{"id":"l4Dhv1ujd_me"}},{"cell_type":"code","source":["jumlah_baris,jumlah_kolom = df.shape\n","print(f\"Jumlah Baris: {jumlah_baris}\")\n","print(f\"Jumlah Kolom: {jumlah_kolom}\")"],"metadata":{"id":"-8WpFjnXdrXu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570258,"user_tz":-480,"elapsed":22,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"e0d18c8a-95fb-4ff4-e844-7371081fabee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Jumlah Baris: 162\n","Jumlah Kolom: 7\n"]}]},{"cell_type":"markdown","source":["Informasi diatas menunjukkan bahwa dataset ini memiliki jumlah baris sebanyak 162 dan jumlah kolom sebanyak 7."],"metadata":{"id":"RGVR-Vlbdpit"}},{"cell_type":"markdown","source":["**Informasi lanjutan**"],"metadata":{"id":"DYCEiPMueI4v"}},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"nr53eyS9eLIv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570258,"user_tz":-480,"elapsed":17,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"9afeebc9-139f-409b-dcf7-da06b427a62f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 162 entries, 0 to 161\n","Data columns (total 7 columns):\n"," #   Column                 Non-Null Count  Dtype \n","---  ------                 --------------  ----- \n"," 0   Tanggal                162 non-null    object\n"," 1   Nama Item              162 non-null    object\n"," 2   Harga Satuan           162 non-null    object\n"," 3   Total Stok             162 non-null    int64 \n"," 4   Stok Terjual           162 non-null    int64 \n"," 5   Sisa Stok              162 non-null    int64 \n"," 6   Perkiraaan Pendapatan  162 non-null    object\n","dtypes: int64(3), object(4)\n","memory usage: 9.0+ KB\n"]}]},{"cell_type":"markdown","source":["Kemudian ada informasi lanjutan dari dataset berikut penjelasannya :\n","1. Tanggal : Merupakan kolom yang memberikan informasi tanggal, bulan dan tahun dengan tipe data object.\n","\n","2. Nama Item : Merupakan kolom yang memberikan informasi tentang nama item yang dijual dengan tipe data object.\n","\n","3. Harga Satuan : Merupakan kolom yang memberikan informasi tentang harga satuan dari item yang dijual dengan tipe data object.\n","\n","4. Total Stok : Merupakan kolom yang memberikan informasi tentang stok item yang akan dijual dengan tipe data int64.\n","\n","5. Stok Terjual : Merupakan kolom yang memberikan informasi tentang jumlah stok yang terjual dengan tipe data int64.\n","\n","6. Sisa Stok : Merupakan kolom yang memberikan informasi tentang sisa stok yang telah terjual dengan tipe data int64.\n","\n","7. Perkiraan Pendapatan : Merupakan kolom yang memberikan informasi tentang perkiraan pendapatan setelah penjualan dengan tipe data object."],"metadata":{"id":"mOj_SjEieLX3"}},{"cell_type":"markdown","source":["**Informasi statistik deskriptif**"],"metadata":{"id":"wcE0lDuKeXre"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"duoAEjYAebm2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570259,"user_tz":-480,"elapsed":15,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"708c4665-1993-4914-8453-9be1c04780e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Total Stok  Stok Terjual   Sisa Stok\n","count  162.000000    162.000000  162.000000\n","mean   156.074074     74.296296    6.160494\n","std     90.201813     40.992787   28.669224\n","min      0.000000      0.000000    0.000000\n","25%     83.250000     38.500000    1.000000\n","50%    185.000000     80.000000    2.000000\n","75%    240.000000    102.750000    4.000000\n","max    260.000000    156.000000  260.000000"],"text/html":["\n","  <div id=\"df-6b493de5-338e-4462-ac7e-87cd976388b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>162.000000</td>\n","      <td>162.000000</td>\n","      <td>162.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>156.074074</td>\n","      <td>74.296296</td>\n","      <td>6.160494</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>90.201813</td>\n","      <td>40.992787</td>\n","      <td>28.669224</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>83.250000</td>\n","      <td>38.500000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>185.000000</td>\n","      <td>80.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>240.000000</td>\n","      <td>102.750000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>260.000000</td>\n","      <td>156.000000</td>\n","      <td>260.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b493de5-338e-4462-ac7e-87cd976388b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b493de5-338e-4462-ac7e-87cd976388b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b493de5-338e-4462-ac7e-87cd976388b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-acf6ea6b-1791-454f-8a2d-b48f9a4c0b7f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-acf6ea6b-1791-454f-8a2d-b48f9a4c0b7f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-acf6ea6b-1791-454f-8a2d-b48f9a4c0b7f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86.24582867420541,\n        \"min\": 0.0,\n        \"max\": 260.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          156.07407407407408,\n          185.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56.90529012862992,\n        \"min\": 0.0,\n        \"max\": 162.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          74.29629629629629,\n          80.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.43970250814382,\n        \"min\": 0.0,\n        \"max\": 260.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.160493827160494,\n          2.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":162}]},{"cell_type":"markdown","source":["1. Total Stok :\n","  - Count: Jumlah total entri atau pengamatan dalam kolom Total Stok adalah 162.\n","  - Mean (Rata-rata): Rata-rata dari semua nilai dalam kolom Total Stok adalah sekitar 156.074074.\n","  - Standard Deviation (Standar Deviasi): Standar deviasi dari data dalam kolom Total Stok adalah sekitar 90.201813. Ini menunjukkan seberapa jauh nilai-nilai dalam kolom tersebar dari rata-ratanya.\n","  - Min (Minimum): Nilai terkecil dalam kolom Total Stok adalah 0. Ini menunjukkan bahwa ada produk yang memiliki stok 0.\n","  - 25th Percentile (Kuartil Pertama): Nilai yang membagi data menjadi dua bagian sama besar, dengan 25% dari data berada di bawahnya. Kuartil pertama untuk Total Stok adalah 83.25.\n","  - 50th Percentile (Median): Nilai tengah dari data saat diurutkan. Median untuk Total Stok adalah 185.\n","  - 75th Percentile (Kuartil Ketiga): Nilai yang membagi data menjadi dua bagian sama besar, dengan 75% dari data berada di bawahnya. Kuartil ketiga untuk Total Stok adalah 240.\n","  - Max (Maksimum): Nilai tertinggi dalam kolom Total Stok adalah 260. Ini menunjukkan jumlah maksimum stok yang dimiliki.\n","2. Stok Terjual :\n","  - Count: Jumlah total entri atau pengamatan dalam kolom Stok Terjual juga adalah 162.\n","  - Mean (Rata-rata): Rata-rata dari semua nilai dalam kolom Stok Terjual adalah sekitar 74.296296.\n","  - Standard Deviation (Standar Deviasi): Standar deviasi dari data dalam kolom Stok Terjual adalah sekitar 40.992787.\n","  - Min (Minimum): Nilai terkecil dalam kolom Stok Terjual juga adalah 0. Ini menunjukkan bahwa ada produk yang tidak ada yang terjual.\n","  - 25th Percentile (Kuartil Pertama): Kuartil pertama untuk Stok Terjual adalah 38.5.\n","  - 50th Percentile (Median): Median untuk Stok Terjual adalah 80.\n","  - 75th Percentile (Kuartil Ketiga): Kuartil ketiga untuk Stok Terjual adalah 102.75.\n","  - Max (Maksimum): Nilai tertinggi dalam kolom Stok Terjual adalah 156. Ini menunjukkan jumlah maksimum stok yang terjual.\n","3. Sisa Stok :\n","  - Count: Jumlah total entri atau pengamatan dalam kolom Sisa Stok juga adalah 162.\n","  - Mean (Rata-rata): Rata-rata dari semua nilai dalam kolom Sisa Stok adalah sekitar 6.160494.\n","  - Standard Deviation (Standar Deviasi): Standar deviasi dari data dalam kolom Sisa Stok adalah sekitar 28.669224.\n","  - Min (Minimum): Nilai terkecil dalam kolom Sisa Stok juga adalah 0. Ini menunjukkan bahwa ada produk yang stoknya telah habis terjual.\n","  - 25th Percentile (Kuartil Pertama): Kuartil pertama untuk Sisa Stok adalah 1.\n","  - 50th Percentile (Median): Median untuk Sisa Stok adalah 2.\n","  - 75th Percentile (Kuartil Ketiga): Kuartil ketiga untuk Sisa Stok adalah 4.\n","  - Max (Maksimum): Nilai tertinggi dalam kolom Sisa Stok adalah 260. Ini menunjukkan bahwa ada produk yang stoknya telah diisi kembali hingga maksimum."],"metadata":{"id":"_VLruzDxeb22"}},{"cell_type":"markdown","source":["### Exploratory Data Analysis (EDA)"],"metadata":{"id":"JRCtZgB0emS1"}},{"cell_type":"code","source":["# Define the list of columns to visualize\n","columns = ['Total Stok', 'Stok Terjual', 'Sisa Stok']\n","\n","# Create the plot\n","plt.figure(figsize=(12, 10))\n","\n","for i, Quality in enumerate(columns):\n","    plt.subplot(3, 3, i + 1)\n","    sns.histplot(data=df, x=Quality, kde=True, bins=15, color='purple')\n","\n","plt.show()"],"metadata":{"id":"qXr4McC4e04D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570952,"user_tz":-480,"elapsed":703,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"96161c29-4da5-4460-80f8-87d9c9c82902"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["penjelasan"],"metadata":{"id":"jM_T60dGe1OG"}},{"cell_type":"markdown","source":["### Verify Data Quality"],"metadata":{"id":"Dw9OlOWve8c1"}},{"cell_type":"markdown","source":["**Missing values**"],"metadata":{"id":"A1x9HHbOfA5V"}},{"cell_type":"code","source":["missing_values = df.isnull().sum()\n","\n","print(missing_values)"],"metadata":{"id":"fTF2BiaOe_mW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570952,"user_tz":-480,"elapsed":48,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"798028b1-4cb0-4524-e638-6739f2a745f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Tanggal                  0\n","Nama Item                0\n","Harga Satuan             0\n","Total Stok               0\n","Stok Terjual             0\n","Sisa Stok                0\n","Perkiraaan Pendapatan    0\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["Hasil diatas menunjukkan bahwa tidak ada data yang hilang (missing values)."],"metadata":{"id":"tlAZ6HKofEOX"}},{"cell_type":"markdown","source":["**Outliers values**"],"metadata":{"id":"GIBMV3frfrdn"}},{"cell_type":"code","source":["def detect_outliers(column):\n","    column = pd.to_numeric(column, errors='coerce')\n","\n","    column = column.dropna()\n","\n","    Q1 = column.quantile(0.25)\n","    Q3 = column.quantile(0.75)\n","    IQR = Q3 - Q1\n","\n","    outliers = (column < (Q1 - 1.5 * IQR)) | (column > (Q3 + 1.5 * IQR))\n","\n","    percentage_outliers = outliers.sum() / len(column) * 100\n","\n","    return outliers, percentage_outliers\n","\n","\n","for column in df.columns:\n","    outliers, percentage_outliers = detect_outliers(df[column])\n","\n","    print(f\"Kolom '{column}':\")\n","    print(f\"  - Jumlah outliers: {outliers.sum()}\")\n","    print(f\"  - Persentase kehadiran outliers: {percentage_outliers:.2f}%\")\n","    print()"],"metadata":{"id":"rwtzxVakfvJG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570952,"user_tz":-480,"elapsed":46,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"845621bc-6ca1-49e1-c08a-45555def20cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Kolom 'Tanggal':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: nan%\n","\n","Kolom 'Nama Item':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: nan%\n","\n","Kolom 'Harga Satuan':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: nan%\n","\n","Kolom 'Total Stok':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: 0.00%\n","\n","Kolom 'Stok Terjual':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: 0.00%\n","\n","Kolom 'Sisa Stok':\n","  - Jumlah outliers: 9\n","  - Persentase kehadiran outliers: 5.56%\n","\n","Kolom 'Perkiraaan Pendapatan':\n","  - Jumlah outliers: 0\n","  - Persentase kehadiran outliers: nan%\n","\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-165-772c7fe10261>:12: RuntimeWarning:\n","\n","invalid value encountered in scalar divide\n","\n","<ipython-input-165-772c7fe10261>:12: RuntimeWarning:\n","\n","invalid value encountered in scalar divide\n","\n","<ipython-input-165-772c7fe10261>:12: RuntimeWarning:\n","\n","invalid value encountered in scalar divide\n","\n","<ipython-input-165-772c7fe10261>:12: RuntimeWarning:\n","\n","invalid value encountered in scalar divide\n","\n"]}]},{"cell_type":"markdown","source":["Hasil diatas menunjukkan bahwa untuk kolom Tanggal, Nama Item, Harga Satuan dan Perkiraan Pendapatan tidak ada outliers dikarenakan bukan angka (Not a Number). Kemudian untuk kolom Total Stok dan Stok Terjual juga tidak ada outliers. Tetapi untuk kolom Sisa Stok memiliki outliers terdapat ouliers sebesar 5.56%."],"metadata":{"id":"pivbtUU0fuu9"}},{"cell_type":"markdown","source":["**Duplicated values**"],"metadata":{"id":"fVi-fL2CfxkG"}},{"cell_type":"code","source":["duplicates_by_values = df.duplicated().sum()\n","print(f\"Hasil {duplicates_by_values}:\")"],"metadata":{"id":"LWFP5OZLf3-E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501570952,"user_tz":-480,"elapsed":46,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"ed2ce20b-3ccd-4420-b00c-0a68814e5b90"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hasil 0:\n"]}]},{"cell_type":"markdown","source":["Berdasarkan hasil diatas bahwa tidak ada data yang terduplikat."],"metadata":{"id":"imt0c0kOf4SW"}},{"cell_type":"markdown","source":["# **DATA CLEANING**"],"metadata":{"id":"RjurICBpQp0Y"}},{"cell_type":"markdown","source":["### Penanganan missing values"],"metadata":{"id":"jgY1F8SHQuCZ"}},{"cell_type":"markdown","source":["**Pengecekan missing values**"],"metadata":{"id":"ApJp8crDROfh"}},{"cell_type":"code","source":["pd.DataFrame(df.isna().sum() / len(df) * 100, columns=['Null Ratio %'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dVVj3WbbRD58","executionInfo":{"status":"ok","timestamp":1714501570952,"user_tz":-480,"elapsed":45,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"6867fbb1-9df8-4fee-f0b3-9617a44f5d76"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Null Ratio %\n","Tanggal                         0.0\n","Nama Item                       0.0\n","Harga Satuan                    0.0\n","Total Stok                      0.0\n","Stok Terjual                    0.0\n","Sisa Stok                       0.0\n","Perkiraaan Pendapatan           0.0"],"text/html":["\n","  <div id=\"df-987f291b-4fa3-4cc3-81d0-8b066973794c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Null Ratio %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Tanggal</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nama Item</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Harga Satuan</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Stok Terjual</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sisa Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Perkiraaan Pendapatan</th>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-987f291b-4fa3-4cc3-81d0-8b066973794c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-987f291b-4fa3-4cc3-81d0-8b066973794c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-987f291b-4fa3-4cc3-81d0-8b066973794c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9cbfcd2a-c7ac-4819-a4f9-19bac4ba1b08\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9cbfcd2a-c7ac-4819-a4f9-19bac4ba1b08')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9cbfcd2a-c7ac-4819-a4f9-19bac4ba1b08 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Null Ratio %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":167}]},{"cell_type":"markdown","source":["Hasil diatas menunjukkan bahwa tidak ada missing values."],"metadata":{"id":"FB9dZuUZRWr2"}},{"cell_type":"markdown","source":["**Hapus missing values**"],"metadata":{"id":"neptDWHPRgma"}},{"cell_type":"markdown","source":["Dikarenakan tidak adanya missing values maka hapus missing values pun juga tidak ada."],"metadata":{"id":"7AtuRJTLRoo7"}},{"cell_type":"markdown","source":["**Imputasi missing values**"],"metadata":{"id":"8E9BlvqzR1kJ"}},{"cell_type":"markdown","source":["Dikarenakan tidak adanya missing values maka imputasi missing values pun juga tidak ada."],"metadata":{"id":"w1zu-TLQR5Wh"}},{"cell_type":"markdown","source":["**Pengecekan ulang**"],"metadata":{"id":"vIzmvEVpR8Gc"}},{"cell_type":"code","source":["pd.DataFrame(df.isna().sum() / len(df) * 100, columns=['Null Ratio %'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qd_xT1BRTWN4","executionInfo":{"status":"ok","timestamp":1714501570953,"user_tz":-480,"elapsed":43,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"a41e93ce-7032-4334-f7f3-8d2fb8a2aafe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Null Ratio %\n","Tanggal                         0.0\n","Nama Item                       0.0\n","Harga Satuan                    0.0\n","Total Stok                      0.0\n","Stok Terjual                    0.0\n","Sisa Stok                       0.0\n","Perkiraaan Pendapatan           0.0"],"text/html":["\n","  <div id=\"df-4a442d55-1fb0-403f-a65d-d4cac592e4db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Null Ratio %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Tanggal</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Nama Item</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Harga Satuan</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Stok Terjual</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sisa Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Perkiraaan Pendapatan</th>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a442d55-1fb0-403f-a65d-d4cac592e4db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4a442d55-1fb0-403f-a65d-d4cac592e4db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a442d55-1fb0-403f-a65d-d4cac592e4db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7387a368-8a55-4b56-8a84-2730e17ba9f5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7387a368-8a55-4b56-8a84-2730e17ba9f5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7387a368-8a55-4b56-8a84-2730e17ba9f5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Null Ratio %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":168}]},{"cell_type":"markdown","source":["penjelasan"],"metadata":{"id":"0eu4BdfIR-c8"}},{"cell_type":"markdown","source":["### Penanganan duplicated values"],"metadata":{"id":"iYlKmr-mVNuR"}},{"cell_type":"markdown","source":["**Pengecekan nilai duplikat**"],"metadata":{"id":"WL6TXSeNVQoe"}},{"cell_type":"code","source":["df[df.duplicated()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F06QtwDrVVhA","executionInfo":{"status":"ok","timestamp":1714501570953,"user_tz":-480,"elapsed":38,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"53ff6647-8606-4a3a-8ef8-5e3d709a662b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Tanggal, Nama Item, Harga Satuan, Total Stok, Stok Terjual, Sisa Stok, Perkiraaan Pendapatan]\n","Index: []"],"text/html":["\n","  <div id=\"df-eac9879e-badb-4fe4-98b2-2ba87e5d2913\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tanggal</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eac9879e-badb-4fe4-98b2-2ba87e5d2913')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eac9879e-badb-4fe4-98b2-2ba87e5d2913 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eac9879e-badb-4fe4-98b2-2ba87e5d2913');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":169}]},{"cell_type":"markdown","source":["Hasil diatas menunjukkan bahwa tidak ada nilai yang terduplikat."],"metadata":{"id":"1W8yJSBcVZhN"}},{"cell_type":"markdown","source":["**Hapus nilai duplikat**"],"metadata":{"id":"Tft33uSaVa7a"}},{"cell_type":"markdown","source":["Dikarenakan tidak adanya nilai yang terduplikat maka tidak ada juga hapus nilai duplikat."],"metadata":{"id":"UPTQY6e3VgK2"}},{"cell_type":"markdown","source":["### Penanganan outliers\n"],"metadata":{"id":"CRBYf15BPlis"}},{"cell_type":"markdown","source":["**Pengecekan outliers**"],"metadata":{"id":"guwymcqWPoJT"}},{"cell_type":"code","source":["results = []\n","\n","cols = df.select_dtypes(include=['float64', 'int64'])\n","\n","for col in cols:\n","  q1 = df[col].quantile(0.25)\n","  q3 = df[col].quantile(0.75)\n","  iqr = q3 - q1\n","  lower_bound = q1 - 1.5*iqr\n","  upper_bound = q3 + 1.5*iqr\n","  outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]\n","  percent_outliers = (len(outliers)/len(df))*100\n","  results.append({'Kolom': col, 'Persentase Outliers': percent_outliers})\n","\n","results_df_file = pd.DataFrame(results)\n","results_df_file.set_index('Kolom', inplace=True)\n","results_df_file = results_df_file.rename_axis(None, axis=0).rename_axis('Kolom', axis=1)\n","\n","display(results_df_file)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dyb3NkR2Prt8","executionInfo":{"status":"ok","timestamp":1714501570953,"user_tz":-480,"elapsed":35,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"b1834c9f-3d54-4186-d33f-0959cdac4705"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Kolom         Persentase Outliers\n","Total Stok               0.000000\n","Stok Terjual             0.000000\n","Sisa Stok                5.555556"],"text/html":["\n","  <div id=\"df-18bb8b0c-2960-4511-9051-953acb906454\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Kolom</th>\n","      <th>Persentase Outliers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Total Stok</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Stok Terjual</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Sisa Stok</th>\n","      <td>5.555556</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18bb8b0c-2960-4511-9051-953acb906454')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-18bb8b0c-2960-4511-9051-953acb906454 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-18bb8b0c-2960-4511-9051-953acb906454');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04aa5d53-f9ff-4511-90d6-579fb0f0987f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04aa5d53-f9ff-4511-90d6-579fb0f0987f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04aa5d53-f9ff-4511-90d6-579fb0f0987f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df_file","summary":"{\n  \"name\": \"results_df_file\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Persentase Outliers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.2075014954979206,\n        \"min\": 0.0,\n        \"max\": 5.555555555555555,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5.555555555555555,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"wc-vZhJibzww"}},{"cell_type":"code","source":["boxplot = df.drop('Sisa Stok', axis=1).boxplot(grid=False, rot=45,  figsize=(8,6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DhQ7yB_HmWUM","executionInfo":{"status":"ok","timestamp":1714501570953,"user_tz":-480,"elapsed":33,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"8bab35fd-f43a-42d3-c7fe-dab149b9975a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Hapus Outliers**"],"metadata":{"id":"90oDD26vn0Ub"}},{"cell_type":"code","source":["Q1 = df['Sisa Stok'].quantile(0.25)\n","Q3 = df['Sisa Stok'].quantile(0.75)\n","IQR = Q3 - Q1\n","lower_bound = Q1 - 1.5 * IQR\n","upper_bound = Q3 + 1.5 * IQR\n","\n","df = df[(df['Sisa Stok'] >= lower_bound) & (df['Sisa Stok'] <= upper_bound)]"],"metadata":{"id":"Erz4rj7fn3xd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Pengecekkan Ulang**"],"metadata":{"id":"us3vZ5tnoR1K"}},{"cell_type":"code","source":["results = []\n","\n","cols = df.select_dtypes(include=['float64', 'int64'])\n","\n","for col in cols:\n","  q1 = df[col].quantile(0.25)\n","  q3 = df[col].quantile(0.75)\n","  iqr = q3 - q1\n","  lower_bound = q1 - 1.5*iqr\n","  upper_bound = q3 + 1.5*iqr\n","  outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]\n","  percent_outliers = (len(outliers)/len(df))*100\n","  results.append({'Kolom': col, 'Persentase Outliers': percent_outliers})\n","\n","results_df_file = pd.DataFrame(results)\n","results_df_file.set_index('Kolom', inplace=True)\n","results_df_file = results_df_file.rename_axis(None, axis=0).rename_axis('Kolom', axis=1)\n","\n","display(results_df_file)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UaILEbUjoTQR","executionInfo":{"status":"ok","timestamp":1714501571818,"user_tz":-480,"elapsed":64,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"9ace958f-ff5d-4d1d-d396-bf2350e4cad7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Kolom         Persentase Outliers\n","Total Stok                    0.0\n","Stok Terjual                  0.0\n","Sisa Stok                     0.0"],"text/html":["\n","  <div id=\"df-19feecec-dda8-4359-a3d3-a3d898d77891\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Kolom</th>\n","      <th>Persentase Outliers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Total Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Stok Terjual</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sisa Stok</th>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19feecec-dda8-4359-a3d3-a3d898d77891')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-19feecec-dda8-4359-a3d3-a3d898d77891 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-19feecec-dda8-4359-a3d3-a3d898d77891');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9b1f0e1b-924b-48e6-b07f-3131923cb6d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b1f0e1b-924b-48e6-b07f-3131923cb6d9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9b1f0e1b-924b-48e6-b07f-3131923cb6d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df_file","summary":"{\n  \"name\": \"results_df_file\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Persentase Outliers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["boxplot = df.drop('Sisa Stok', axis=1).boxplot(grid=False, rot=45,  figsize=(8,6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ecbHyHBh4DV","executionInfo":{"status":"ok","timestamp":1714501571818,"user_tz":-480,"elapsed":56,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"e0d93b2f-cfe8-4f78-e3a8-f8c8f0a77bc4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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eJAYBeB0JkyYoPHjx0uSvL29Vbt2bf388886deqUOnfuLEnKyMhQmzZtNGrUKA0bNkySiFH8LYIUKIPi4mJJ0rlz5xy/8e/atUuSFBwcLH9/f8d9SXJ3d9ddd92lEydOaPv27Y7Hq1atenUHB4ByMmLECE2bNs1x32q1ysvLS5988ol2796tESNGyNPTUwMHDpTValVRUZHBaeEsCFKgDKxWq/bv36+HH35YZ86c0cKFCxUZGamdO3fKz89P9evX15w5c/TNN984fsbFxUXh4eGljqNiawGAa13JL+DnS0pK0tSpU5WYmKipU6dK+v1i+LGxsZo9e7buvPNOHT9+XDNnzpTFYpHdbndcnxS4GI4hBcooLS1N4eHhuuWWW7Rjxw4lJyerX79+kqTMzEy1bdtWgYGBuvfeexUREaGVK1cqOTlZX3/9tRo2bGh4egAom7S0NN10002ljgOdNm2aEhMTNWnSJCUmJio/P1/p6ek6deqUWrVqJRcXFxUWFsrVlYv54NKwhRT4G+fvps/Pz9dNN92kadOmafv27WrSpIm6du0q6ffjSQMDA7V582YFBATonXfe0YABA7RhwwatX7+eGAVwzXvkkUf0448/Ou6vW7dO4eHh+uijj0rt2XnyySc1duxYDR06VO+++648PT118803q02bNnJxcVFRURExijIhSIGLKLlESXp6usaOHavVq1eroKBAVatW1csvv6wDBw5owIABSk9Pl8ViUXFxsQICAjR37lxt2bJFn3/+udatW6dmzZqZfisAcFF5eXn69ddfVb9+fcdjrVq10lNPPaUHH3xQixcvlvT7L99Wq1WdOnWSp6enHn30Uc2fP7/UuthNj7Jilz3wF0pi9Pvvv1f37t3VsmVL9enTRz169HAss3fvXsXExOi2227Ta6+95vgg37Bhg+644w5DkwNA2RQVFZWKyHfffVdRUVFq3ry5zpw5o5EjR2ratGlasGCB4uLiJEnp6el6/fXX1bZtW3Xv3p0torgiBClwET/99JPatGmjgQMHavjw4aW+XakkWPfs2aPWrVurbdu2GjJkiDZt2qSXX35Z6enpCg4ONjg9AFya8y9YX1RUpDp16igwMFD//e9/1bhxY509e1YjR47U1KlTNW7cOEVEROidd96Ri4uLlixZIkkcM4orQpACF2C322W32zVkyBCdPHlSH3zwgeO5nJwcHTx4UJmZmapXr54aNmyoPXv2qFu3bvL19dXx48f1ySefqHnz5gbfAQCU3UsvvaSWLVsqOjpaLVq0ULVq1TRr1iw1adJEhYWFmjZtmsaOHas6derIz89PGzdulJubGxe+xxUjSIGLiIuLU926dTVlyhRJ0rJly7R06VItWrRI1apVU3FxsZYuXarWrVsrKytLhw8fVnBwsIKCggxPDgB/7/wto3PmzNHw4cP10UcfKSYmRqdPn1azZs3k5+en5ORkNWnSRBaLRb/88ossFotCQkJktVrZMopyQZACF9G7d2/t3r1b48aN0+bNm7VgwQJ16NBB//rXvxQSEqJx48bJZrNp0aJF8vX1NT0uAFyWlJQULVy4UI0aNdKgQYN07tw5ubu7O6K0evXqeuedd9S0adNS30XPd9OjvBCkwAWU7H7Ky8tTbGyssrOzdfbsWU2cOFG33XabQkJCJEkJCQnavXu3NmzYYHhiALg83333naKjo1VcXKzx48dr6NChknTBKJ05c6aaNm1qeGJURvxaA1xAySWcqlatqq+//lrr16/X3r17df/99yskJMTxHfYFBQVq2LCh46tEAeBaV/JZVfJn06ZNNWvWLPn6+mrDhg3au3evpN+/+rigoEDe3t765ptvlJ2drYSEBOXm5hqbHZUXQYrr3scff6yff/75T49brVbHRfFDQkJKnWF/9uxZDR8+XEuWLFFiYqLc3d05oB/ANa+wsNDxWZWbm6u8vDxJ0gMPPKBXXnlF3377rd555x2lp6dLktzc3HTu3Dn5+PgoJSVFqampmj59urH5UXlxFDKuW3a7XceOHVPPnj3Vo0cPTZkyRfXq1Su1zIWOjZo4caJ+/vlnrVy5UqtXr1Z4ePjVGhkArkjJyUevvPKKVq9erby8PPn7+2v27Nl66KGHZLfbNXz4cFksFsXHx6tBgwZyd3dXUVGRatSooXbt2unUqVMcO4pyx78mXNcCAgKUmpqq9evXa+jQofrll18uunxeXp7S09NVUFCgdevWKTIy8uoMCgBX4P3339eECRMkSc8995wmTpyouLg4jRw5Ulu3blXXrl2VnZ2tfv366cUXX9TixYs1fvx4HTlyRNLv37yUlpams2fPqm/fvsQoyh1bSHHdslgsKioqUrNmzfTFF1/o1ltvlSRNnjz5T1tKS1StWlVvvvmmbDab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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#**CONSTRUCT DATA**"],"metadata":{"id":"3RbPIDSMG3qa"}},{"cell_type":"markdown","source":["**Melakukan Rekayasa Fitur (Feature Engineering) serta pengecekan hasil**"],"metadata":{"id":"CKZwrJZmG-qo"}},{"cell_type":"code","source":["# Konversi ke tipe data datetime dengan format yang sesuai\n","df['Tanggal'] = pd.to_datetime(df['Tanggal'], format='%d/%m/%Y')\n","\n","# Ekstraksi informasi tanggal\n","df['Tahun'] = df['Tanggal'].dt.year\n","df['Bulan'] = df['Tanggal'].dt.month\n","df['Hari'] = df['Tanggal'].dt.day\n","\n","# Hapus kolom \"Tanggal\"\n","df = df.drop(columns=['Tanggal'])\n","\n","df.insert(0, 'Tahun', df.pop('Tahun'))\n","df.insert(1, 'Bulan', df.pop('Bulan'))\n","df.insert(2, 'Hari', df.pop('Hari'))\n","\n","df['Nama Item'] = pd.factorize(df['Nama Item'])[0]\n","\n","df['Harga Satuan'] = df['Harga Satuan'].str.replace(r'\\D', '', regex=True).astype(int)\n","df['Perkiraaan Pendapatan'] = df['Perkiraaan Pendapatan'].str.replace(r'\\D', '', regex=True).astype(int)\n","\n","# Tampilkan DataFrame hasil rekayasa fitur\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nd3_vpm9kLdu","executionInfo":{"status":"ok","timestamp":1714501571818,"user_tz":-480,"elapsed":52,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"e3780689-6159-43d5-fa79-1c3725ecefb4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-175-e2d03dcc9d54>:2: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-175-e2d03dcc9d54>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-175-e2d03dcc9d54>:6: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-175-e2d03dcc9d54>:7: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["     Tahun  Bulan  Hari  Nama Item  Harga Satuan  Total Stok  Stok Terjual  \\\n","5     2024      3    11          0       2500000          15            10   \n","6     2024      3    12          1       3500000         240            70   \n","7     2024      3    12          2       2500000         240           110   \n","8     2024      3    12          3       1500000         240            60   \n","10    2024      3    12          4       2500000          60            52   \n","..     ...    ...   ...        ...           ...         ...           ...   \n","157   2024      4     6          2       2500000         249            75   \n","158   2024      4     6          3       1500000         249            51   \n","159   2024      4     6          5       2000000         137           137   \n","160   2024      4     6          4       2500000          80            80   \n","161   2024      4     6          0       2500000          25            25   \n","\n","     Sisa Stok  Perkiraaan Pendapatan  \n","5            5               25000000  \n","6            0              245000000  \n","7            0              275000000  \n","8            0               90000000  \n","10           8              130000000  \n","..         ...                    ...  \n","157          0              187500000  \n","158          0               76500000  \n","159          0              274000000  \n","160          0              200000000  \n","161          0               62500000  \n","\n","[153 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-0f3ab89c-5017-41ef-a6ef-2027cda94a8a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Tahun</th>\n","      <th>Bulan</th>\n","      <th>Hari</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>25000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>3500000</td>\n","      <td>240</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>245000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>240</td>\n","      <td>110</td>\n","      <td>0</td>\n","      <td>275000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>240</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>90000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2024</td>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>60</td>\n","      <td>52</td>\n","      <td>8</td>\n","      <td>130000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>249</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>187500000</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>249</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>76500000</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2000000</td>\n","      <td>137</td>\n","      <td>137</td>\n","      <td>0</td>\n","      <td>274000000</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>200000000</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>2024</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>62500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f3ab89c-5017-41ef-a6ef-2027cda94a8a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f3ab89c-5017-41ef-a6ef-2027cda94a8a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f3ab89c-5017-41ef-a6ef-2027cda94a8a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3fface00-07f3-4f68-beb8-237bf23374a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3fface00-07f3-4f68-beb8-237bf23374a7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3fface00-07f3-4f68-beb8-237bf23374a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 153,\n  \"fields\": [\n    {\n      \"column\": \"Tahun\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Bulan\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hari\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 608109,\n        \"min\": 1500000,\n        \"max\": 3500000,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 0,\n        \"max\": 156,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114230680,\n        \"min\": 0,\n        \"max\": 546000000,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          195000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":175}]},{"cell_type":"markdown","source":["Memperkirakan stok yang diperlukan berdasarkan proyeksi permintaan."],"metadata":{"id":"7UmTVd6faI65"}},{"cell_type":"markdown","source":["#**DATA REDUCTION**"],"metadata":{"id":"47lqNxcSH3Sx"}},{"cell_type":"code","source":["df_corr = df.corr(numeric_only=True)\n","px.imshow(df_corr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dJZphX-lsy5n","executionInfo":{"status":"ok","timestamp":1714501571818,"user_tz":-480,"elapsed":46,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"fe6310bf-0d61-4766-ab16-a7facf24e799"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"8b0c22c0-a714-4c6f-a39a-64abb735037a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8b0c22c0-a714-4c6f-a39a-64abb735037a\")) {                    Plotly.newPlot(                        \"8b0c22c0-a714-4c6f-a39a-64abb735037a\",                        [{\"coloraxis\":\"coloraxis\",\"name\":\"0\",\"x\":[\"Tahun\",\"Bulan\",\"Hari\",\"Nama Item\",\"Harga Satuan\",\"Total Stok\",\"Stok Terjual\",\"Sisa Stok\",\"Perkiraaan Pendapatan\"],\"y\":[\"Tahun\",\"Bulan\",\"Hari\",\"Nama Item\",\"Harga Satuan\",\"Total Stok\",\"Stok Terjual\",\"Sisa Stok\",\"Perkiraaan Pendapatan\"],\"z\":[[null,null,null,null,null,null,null,null,null],[null,1.0,-0.8240704256319328,0.015314384622777167,0.011527808354084842,0.013519532194839121,0.07633120488250049,0.15839445409736813,0.08239491871862682],[null,-0.8240704256319328,1.0,0.017593843850850683,-0.021101249582960644,0.0003357939586417144,-0.02602331026429622,-0.24076140714005648,-0.028584513053938825],[null,0.015314384622777167,0.017593843850850683,1.0,-0.5170541330577058,0.0200583564494085,0.5006873327691613,0.23200035471981942,0.1927602942960011],[null,0.011527808354084842,-0.021101249582960644,-0.5170541330577058,1.0,0.06601401817857179,0.022777249366308795,-0.061889786673826344,0.44540195928711884],[null,0.013519532194839121,0.0003357939586417144,0.0200583564494085,0.06601401817857179,1.0,0.433828239736996,0.10396025333331639,0.4483052219560646],[null,0.07633120488250049,-0.02602331026429622,0.5006873327691613,0.022777249366308795,0.433828239736996,1.0,0.25254289869832214,0.8837398569101561],[null,0.15839445409736813,-0.24076140714005648,0.23200035471981942,-0.061889786673826344,0.10396025333331639,0.25254289869832214,1.0,0.18860545981666116],[null,0.08239491871862682,-0.028584513053938825,0.1927602942960011,0.44540195928711884,0.4483052219560646,0.8837398569101561,0.18860545981666116,1.0]],\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\",\"hovertemplate\":\"x: %{x}\\u003cbr\\u003ey: %{y}\\u003cbr\\u003ecolor: %{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"scaleanchor\":\"y\",\"constrain\":\"domain\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"autorange\":\"reversed\",\"constrain\":\"domain\"},\"coloraxis\":{\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('8b0c22c0-a714-4c6f-a39a-64abb735037a');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"GKHSIe9JRg7g"}},{"cell_type":"code","source":["df = df.drop(columns=['Tahun'])\n","df"],"metadata":{"id":"fnkiyZC5vPUn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501571818,"user_tz":-480,"elapsed":42,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"aef0af8e-2bf5-497e-a53f-ac34a122209e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Bulan  Hari  Nama Item  Harga Satuan  Total Stok  Stok Terjual  \\\n","5        3    11          0       2500000          15            10   \n","6        3    12          1       3500000         240            70   \n","7        3    12          2       2500000         240           110   \n","8        3    12          3       1500000         240            60   \n","10       3    12          4       2500000          60            52   \n","..     ...   ...        ...           ...         ...           ...   \n","157      4     6          2       2500000         249            75   \n","158      4     6          3       1500000         249            51   \n","159      4     6          5       2000000         137           137   \n","160      4     6          4       2500000          80            80   \n","161      4     6          0       2500000          25            25   \n","\n","     Sisa Stok  Perkiraaan Pendapatan  \n","5            5               25000000  \n","6            0              245000000  \n","7            0              275000000  \n","8            0               90000000  \n","10           8              130000000  \n","..         ...                    ...  \n","157          0              187500000  \n","158          0               76500000  \n","159          0              274000000  \n","160          0              200000000  \n","161          0               62500000  \n","\n","[153 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-15e113cd-cdd9-4ea0-837c-737b0c66930b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bulan</th>\n","      <th>Hari</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>25000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>3500000</td>\n","      <td>240</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>245000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>240</td>\n","      <td>110</td>\n","      <td>0</td>\n","      <td>275000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>240</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>90000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>60</td>\n","      <td>52</td>\n","      <td>8</td>\n","      <td>130000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>249</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>187500000</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>249</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>76500000</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2000000</td>\n","      <td>137</td>\n","      <td>137</td>\n","      <td>0</td>\n","      <td>274000000</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>200000000</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>62500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15e113cd-cdd9-4ea0-837c-737b0c66930b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-15e113cd-cdd9-4ea0-837c-737b0c66930b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-15e113cd-cdd9-4ea0-837c-737b0c66930b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-32942fe2-2a71-4ce7-a326-9cc712425313\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32942fe2-2a71-4ce7-a326-9cc712425313')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-32942fe2-2a71-4ce7-a326-9cc712425313 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 153,\n  \"fields\": [\n    {\n      \"column\": \"Bulan\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hari\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          19,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 608109,\n        \"min\": 1500000,\n        \"max\": 3500000,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3500000,\n          2000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249,\n          103\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 0,\n        \"max\": 156,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          20,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114230680,\n        \"min\": 0,\n        \"max\": 546000000,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          195000000,\n          49500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":177}]},{"cell_type":"markdown","source":[],"metadata":{"id":"xXtYd56EH-z9"}},{"cell_type":"markdown","source":["#**DATA TRANSFORMATION**"],"metadata":{"id":"8Chxsv5sIFqS"}},{"cell_type":"markdown","source":["##Mapping"],"metadata":{"id":"oBcSPdUSIOSX"}},{"cell_type":"code","source":["# Mengelompokkan data berdasarkan 'Nama Item' dan menjumlahkan 'Stok Terjual' untuk setiap item\n","produk_terlaris = df.groupby('Nama Item')['Stok Terjual'].sum().sort_values(ascending=False)\n","\n","print(produk_terlaris)"],"metadata":{"id":"AtTAd4UOIS9X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501571819,"user_tz":-480,"elapsed":39,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"aad0211e-40db-4d20-b64c-54c45668be0f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nama Item\n","5    2711\n","1    2247\n","2    2179\n","4    1983\n","3    1615\n","0     525\n","Name: Stok Terjual, dtype: int64\n"]}]},{"cell_type":"markdown","source":["- 0 = Tteokbeokki Large\n","- 1 = Tteokbeokki Medium\n","- 2 = Tteokbeokki Small\n","- 3 = Corndo Ori\n","- 4 = Corndo Moza\n","- 5 = Sandwich\n","\n","dari hasil diatas bahwa produk paling laris adalah Sandwich."],"metadata":{"id":"YNYryeakaerT"}},{"cell_type":"markdown","source":["##Encoding\n","\n","\n"],"metadata":{"id":"H6mF0dYxITNA"}},{"cell_type":"code","source":["df = pd.get_dummies(df)"],"metadata":{"id":"ikmeSIvSIXTY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Pengecekkan Hasil"],"metadata":{"id":"rSXH0j-pIazG"}},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"3QvI21pVIeX8","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1714501571819,"user_tz":-480,"elapsed":38,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"407eb791-c9cd-4b20-d928-bdf58b5fd8aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Bulan  Hari  Nama Item  Harga Satuan  Total Stok  Stok Terjual  Sisa Stok  \\\n","5       3    11          0       2500000          15            10          5   \n","6       3    12          1       3500000         240            70          0   \n","7       3    12          2       2500000         240           110          0   \n","8       3    12          3       1500000         240            60          0   \n","10      3    12          4       2500000          60            52          8   \n","\n","    Perkiraaan Pendapatan  \n","5                25000000  \n","6               245000000  \n","7               275000000  \n","8                90000000  \n","10              130000000  "],"text/html":["\n","  <div id=\"df-85ed11fc-12e4-41cd-ab1e-11a5be920e84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bulan</th>\n","      <th>Hari</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>25000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>3500000</td>\n","      <td>240</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>245000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>240</td>\n","      <td>110</td>\n","      <td>0</td>\n","      <td>275000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>240</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>90000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>60</td>\n","      <td>52</td>\n","      <td>8</td>\n","      <td>130000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85ed11fc-12e4-41cd-ab1e-11a5be920e84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-85ed11fc-12e4-41cd-ab1e-11a5be920e84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-85ed11fc-12e4-41cd-ab1e-11a5be920e84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0efde649-85a7-40eb-af90-ee152900ddba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0efde649-85a7-40eb-af90-ee152900ddba')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0efde649-85a7-40eb-af90-ee152900ddba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 153,\n  \"fields\": [\n    {\n      \"column\": \"Bulan\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hari\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          19,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 608109,\n        \"min\": 1500000,\n        \"max\": 3500000,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3500000,\n          2000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249,\n          103\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 0,\n        \"max\": 156,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          20,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114230680,\n        \"min\": 0,\n        \"max\": 546000000,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          195000000,\n          49500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":180}]},{"cell_type":"markdown","source":[],"metadata":{"id":"ECo8m3gqJrg6"}},{"cell_type":"markdown","source":["#**SELECT MODELING TECHNIQUE**"],"metadata":{"id":"7ZHnORvpJXTH"}},{"cell_type":"markdown","source":["Pada dataset ini kami memilih untuk menggunakan modeling Associate, Pemodelan associate adalah teknik yang berguna untuk menemukan pola hubungan antar item atau produk dalam kumpulan data transaksi. Dengan menganalisis pola-pola ini, kita dapat mengidentifikasi hubungan antara produk yang dibeli bersama yang memberikan informasi berharga untuk membuat rekomendasi produk, meningkatkan strategi penjualan, dan mengoptimalkan manajemen inventaris. Oleh karena itu, menggunakan pemodelan mitra dalam kumpulan data Amazon UK Grocery dapat membantu memahami perilaku pembelian pelanggan, meningkatkan layanan pelanggan, dan meningkatkan efisiensi operasional.."],"metadata":{"id":"bOr-rpaRJbfq"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import plotly.express as px\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.cluster import KMeans\n","from sklearn.cluster import AgglomerativeClustering\n","from sklearn.metrics import accuracy_score\n","from sklearn.impute import SimpleImputer\n","from sklearn.datasets import make_classification\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.metrics import mean_squared_error\n","from sklearn.tree import DecisionTreeRegressor\n","import tensorflow as tf\n","from tensorflow import keras\n","from sklearn import metrics\n","from sklearn.metrics import silhouette_score, davies_bouldin_score, calinski_harabasz_score\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.cluster import KMeans, AgglomerativeClustering\n","from sklearn.metrics import silhouette_score\n","from sklearn.model_selection import cross_val_score, KFold\n","from sklearn.datasets import make_blobs"],"metadata":{"id":"8EpJ_g-YEQdZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_file = pd.read_csv('https://raw.githubusercontent.com/Capstone-Enterprise-Kel-8/Repository-Deployment-Kel-8/main/DataCleaned.csv')\n","\n","df_file"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"1Abbt-H0FV9E","executionInfo":{"status":"ok","timestamp":1714501571819,"user_tz":-480,"elapsed":35,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"5a818a81-6ed6-4468-a249-f09134a7f6af"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Bulan  Hari  Nama Item  Harga Satuan  Total Stok  Stok Terjual  \\\n","0        3    11          0       2500000          15            10   \n","1        3    12          1       3500000         240            70   \n","2        3    12          2       2500000         240           110   \n","3        3    12          3       1500000         240            60   \n","4        3    12          4       2500000          60            52   \n","..     ...   ...        ...           ...         ...           ...   \n","148      4     6          2       2500000         249            75   \n","149      4     6          3       1500000         249            51   \n","150      4     6          5       2000000         137           137   \n","151      4     6          4       2500000          80            80   \n","152      4     6          0       2500000          25            25   \n","\n","     Sisa Stok  Perkiraaan Pendapatan  \n","0            5               25000000  \n","1            0              245000000  \n","2            0              275000000  \n","3            0               90000000  \n","4            8              130000000  \n","..         ...                    ...  \n","148          0              187500000  \n","149          0               76500000  \n","150          0              274000000  \n","151          0              200000000  \n","152          0               62500000  \n","\n","[153 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-83463364-f561-4392-9918-e7c60826042d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bulan</th>\n","      <th>Hari</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Stok Terjual</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>25000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>3500000</td>\n","      <td>240</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>245000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>240</td>\n","      <td>110</td>\n","      <td>0</td>\n","      <td>275000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>240</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>90000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>60</td>\n","      <td>52</td>\n","      <td>8</td>\n","      <td>130000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>249</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>187500000</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>249</td>\n","      <td>51</td>\n","      <td>0</td>\n","      <td>76500000</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2000000</td>\n","      <td>137</td>\n","      <td>137</td>\n","      <td>0</td>\n","      <td>274000000</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>200000000</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>62500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83463364-f561-4392-9918-e7c60826042d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-83463364-f561-4392-9918-e7c60826042d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-83463364-f561-4392-9918-e7c60826042d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fb38521-2992-4b4e-b637-0c7ae9bb19fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fb38521-2992-4b4e-b637-0c7ae9bb19fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fb38521-2992-4b4e-b637-0c7ae9bb19fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_file","summary":"{\n  \"name\": \"df_file\",\n  \"rows\": 153,\n  \"fields\": [\n    {\n      \"column\": \"Bulan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 3,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hari\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          19,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 608109,\n        \"min\": 1500000,\n        \"max\": 3500000,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3500000,\n          2000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249,\n          103\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stok Terjual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40,\n        \"min\": 0,\n        \"max\": 156,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          20,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114230680,\n        \"min\": 0,\n        \"max\": 546000000,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          195000000,\n          49500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":183}]},{"cell_type":"markdown","source":["#**MODELLING ASSOCIATE**"],"metadata":{"id":"lBzR7HnGJ1ix"}},{"cell_type":"markdown","source":["##Pre-Processing"],"metadata":{"id":"yARYp5FiJ9bk"}},{"cell_type":"markdown","source":["###Adjusment"],"metadata":{"id":"Fpxrs2NXKRgN"}},{"cell_type":"code","source":["x_final = df_file.drop('Stok Terjual', axis=1)"],"metadata":{"id":"qcKVWm77KVcN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###Normalisasi Data"],"metadata":{"id":"1hsv-5PlKVo8"}},{"cell_type":"code","source":["scaler = MinMaxScaler()\n","x_final_norm = scaler.fit_transform(x_final)"],"metadata":{"id":"D6RWaFTwKYwp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###Validasi Silang"],"metadata":{"id":"pOsf9cNkKbt4"}},{"cell_type":"code","source":["# Inisialisasi dan melatih imputer\n","imputer = SimpleImputer(strategy='mean')\n","x_final_imputed = imputer.fit_transform(x_final_norm)\n","\n","# Sekarang x_final_imputed dapat digunakan untuk KMeans\n","inertia_values = []\n","k_range = range(2, 10)\n","\n","for k in k_range:\n","    kmeans = KMeans(n_clusters=k, random_state=42)\n","    kmeans.fit(x_final_imputed)  # Menggunakan x_final_imputed\n","    inertia_values.append(kmeans.inertia_)\n","\n","plt.plot(k_range, inertia_values, marker='o')\n","plt.xlabel('Number of clusters (K)')\n","plt.ylabel('Inertia')\n","plt.title('Elbow Method for Optimal K')\n","plt.xticks(k_range)\n","plt.show()\n"],"metadata":{"id":"kujk0woVKiIc","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":1017,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"fde6cc2c-7cd3-4df5-bb0a-70a01c9d5c4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"Oh806hq3RX15"}},{"cell_type":"markdown","source":["##Build Model"],"metadata":{"id":"RxJ0l4hsKr6i"}},{"cell_type":"markdown","source":["###K-Means"],"metadata":{"id":"R9-y30wAKycc"}},{"cell_type":"code","source":["imputer = SimpleImputer(strategy='mean')\n","x_final_imputed = imputer.fit_transform(x_final_norm)\n","\n","kmeans = KMeans(n_clusters=4, random_state=42)\n","kmeans.fit(x_final_imputed)"],"metadata":{"id":"COPKDfFXK1MT","colab":{"base_uri":"https://localhost:8080/","height":149},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":30,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"ad1f869d-937a-4c4d-b8b3-e041defd247d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=4, random_state=42)"],"text/html":["<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=4, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=4, random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":187}]},{"cell_type":"markdown","source":[],"metadata":{"id":"NaLSt5GxRWQr"}},{"cell_type":"markdown","source":["###Hierarchical Clustering"],"metadata":{"id":"c1UqVGGWK3hK"}},{"cell_type":"code","source":["hc = AgglomerativeClustering(n_clusters=4, affinity='euclidean', linkage='ward')"],"metadata":{"id":"wAJamdtlK8sx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"cxzva3VmRUvt"}},{"cell_type":"markdown","source":["##Begins and Compare Clusters"],"metadata":{"id":"1834vVAULEvk"}},{"cell_type":"code","source":["imputer = SimpleImputer(strategy='mean')\n","x_final_imputed = imputer.fit_transform(x_final_norm)\n","\n","hierarchy_clust = hc.fit_predict(x_final_imputed)"],"metadata":{"id":"t-9NaTIGLM6G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":21,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"61a78280-f29a-490d-9476-6322dde6a50b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_agglomerative.py:983: FutureWarning:\n","\n","Attribute `affinity` was deprecated in version 1.2 and will be removed in 1.4. Use `metric` instead\n","\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"Hm734aIpLPSI"}},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","\n","# Misalkan x_final_norm adalah data yang masih mengandung nilai NaN\n","# Misalkan imputer yang digunakan adalah SimpleImputer dengan strategi mean\n","imputer = SimpleImputer(strategy='mean')\n","x_final_imputed = imputer.fit_transform(x_final_norm)\n","\n","# Sekarang x_final_imputed dapat digunakan untuk KMeans\n","kmeans_clust = kmeans.predict(x_final_imputed)\n"],"metadata":{"id":"-Yn8R_wFLPxa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"AR1H7H6kLR1M"}},{"cell_type":"code","source":["x_final = pd.DataFrame(x_final).reset_index(drop=True)\n","\n","kmeans_col = pd.DataFrame(kmeans_clust, columns=[\"kmeans_cluster\"])\n","hierarchy_col = pd.DataFrame(hierarchy_clust, columns=[\"hierarchy_cluster\"])\n","\n","combined_data_assoc = pd.concat([x_final, kmeans_col, hierarchy_col], axis=1)"],"metadata":{"id":"2a0_CFflLSHF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"9HJhawEjLUAp"}},{"cell_type":"code","source":["combined_data_assoc.head()"],"metadata":{"id":"7_tRLoO6LVFB","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":18,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"2ebd7897-4bf7-427f-ffb8-68e507b75bed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Bulan  Hari  Nama Item  Harga Satuan  Total Stok  Sisa Stok  \\\n","0      3    11          0       2500000          15          5   \n","1      3    12          1       3500000         240          0   \n","2      3    12          2       2500000         240          0   \n","3      3    12          3       1500000         240          0   \n","4      3    12          4       2500000          60          8   \n","\n","   Perkiraaan Pendapatan  kmeans_cluster  hierarchy_cluster  \n","0               25000000               1                  3  \n","1              245000000               3                  2  \n","2              275000000               3                  2  \n","3               90000000               2                  0  \n","4              130000000               2                  0  "],"text/html":["\n","  <div id=\"df-4a1553ae-f021-4b29-bd04-6ab60b10605d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bulan</th>\n","      <th>Hari</th>\n","      <th>Nama Item</th>\n","      <th>Harga Satuan</th>\n","      <th>Total Stok</th>\n","      <th>Sisa Stok</th>\n","      <th>Perkiraaan Pendapatan</th>\n","      <th>kmeans_cluster</th>\n","      <th>hierarchy_cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>2500000</td>\n","      <td>15</td>\n","      <td>5</td>\n","      <td>25000000</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>3500000</td>\n","      <td>240</td>\n","      <td>0</td>\n","      <td>245000000</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2500000</td>\n","      <td>240</td>\n","      <td>0</td>\n","      <td>275000000</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>1500000</td>\n","      <td>240</td>\n","      <td>0</td>\n","      <td>90000000</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2500000</td>\n","      <td>60</td>\n","      <td>8</td>\n","      <td>130000000</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a1553ae-f021-4b29-bd04-6ab60b10605d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4a1553ae-f021-4b29-bd04-6ab60b10605d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a1553ae-f021-4b29-bd04-6ab60b10605d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2c4c978e-5d9c-4f31-b2ac-03a597948895\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c4c978e-5d9c-4f31-b2ac-03a597948895')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2c4c978e-5d9c-4f31-b2ac-03a597948895 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"combined_data_assoc","summary":"{\n  \"name\": \"combined_data_assoc\",\n  \"rows\": 153,\n  \"fields\": [\n    {\n      \"column\": \"Bulan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 3,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hari\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          19,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nama Item\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Harga Satuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 608109,\n        \"min\": 1500000,\n        \"max\": 3500000,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3500000,\n          2000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 90,\n        \"min\": 0,\n        \"max\": 260,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          249,\n          103\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sisa Stok\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perkiraaan Pendapatan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114230680,\n        \"min\": 0,\n        \"max\": 546000000,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          195000000,\n          49500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kmeans_cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hierarchy_cluster\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":192}]},{"cell_type":"markdown","source":[],"metadata":{"id":"dVIC-xz2LXic"}},{"cell_type":"markdown","source":["#**EVALUATION**"],"metadata":{"id":"k6bOp-SAL6CJ"}},{"cell_type":"markdown","source":["##Evaluate Results"],"metadata":{"id":"D_8kw26ML-ex"}},{"cell_type":"markdown","source":["###Klustering"],"metadata":{"id":"38YeY22TMGi9"}},{"cell_type":"code","source":["X, _ = make_blobs(n_samples=300, centers=4, cluster_std=0.60, random_state=0)\n","\n","kmeans = KMeans(n_clusters=4, random_state=42)\n","kmeans.fit(X)\n","\n","silhouette = silhouette_score(X, kmeans.labels_)\n","davies_bouldin = davies_bouldin_score(X, kmeans.labels_)\n","calinski_harabasz = calinski_harabasz_score(X, kmeans.labels_)\n","\n","eval_results = pd.DataFrame({\n","    'Silhouette Score': [silhouette],\n","    'Davies-Bouldin Index': [davies_bouldin],\n","    'Calinski-Harabasz Index': [calinski_harabasz]\n","})\n","\n","print(eval_results)"],"metadata":{"id":"mtnGMtP7MKcx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":17,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"e795b90a-504f-4cba-d6ae-195b7ee6265b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Silhouette Score  Davies-Bouldin Index  Calinski-Harabasz Index\n","0          0.681994              0.437564              1210.089914\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"SOc0g1piMNRd"}},{"cell_type":"markdown","source":["###Regresi"],"metadata":{"id":"aH5rotRSMO0G"}},{"cell_type":"code","source":["slope = 2.5\n","intercept = 10\n","noise_std = 3\n","\n","np.random.seed(0)\n","X = np.random.uniform(0, 20, size=100)\n","y_true = slope * X + intercept\n","y_noisy = y_true + np.random.normal(scale=noise_std, size=len(X))\n","\n","dataset = pd.DataFrame({'Fitur': X, 'Target': y_noisy})\n","\n","print(dataset.head())\n","\n","plt.figure(figsize=(8, 6))\n","plt.scatter(X, y_noisy, label='Data')\n","plt.plot(X, y_true, color='red', label='Regresi Sebenarnya')\n","plt.title('Data Sintetis untuk Evaluasi Regresi')\n","plt.xlabel('Fitur')\n","plt.ylabel('Target')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"HSUmlHZlMWjM","colab":{"base_uri":"https://localhost:8080/","height":675},"executionInfo":{"status":"ok","timestamp":1714501572803,"user_tz":-480,"elapsed":15,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"479772f6-2444-4322-f4a9-55033c863fd3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["       Fitur     Target\n","0  10.976270  33.945226\n","1  14.303787  48.461948\n","2  12.055268  41.535156\n","3  10.897664  32.635428\n","4   8.473096  35.647497\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"2EF-sOQSMbE-"}},{"cell_type":"markdown","source":["##Review Process"],"metadata":{"id":"COCokUgEMk0V"}},{"cell_type":"markdown","source":["###Cross Validation"],"metadata":{"id":"3pfUQgU1Mopq"}},{"cell_type":"code","source":["le = LabelEncoder()\n","y_train_encoded = le.fit_transform(y_train)"],"metadata":{"id":"Jwx9cKZEMwgo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.ensemble import RandomForestClassifier\n","\n","# Pisahkan fitur dan target dari df_file\n","X = df_file.drop(columns=['Stok Terjual'])  # Menggunakan 'Stok Terjual' sebagai target\n","y = df_file['Stok Terjual']\n","\n","# Bagi data menjadi set pelatihan dan pengujian\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Inisialisasi model RandomForestClassifier\n","rf_model = RandomForestClassifier()\n","\n","# Fitkan model dengan data pelatihan\n","rf_model.fit(X_train, y_train)\n","\n","# Tentukan grid parameter yang ingin dioptimalkan\n","param_grid = {\n","    'n_estimators': [50, 100, 200],\n","    'max_depth': [None, 10, 20],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4]\n","}\n","\n","# Buat objek GridSearchCV\n","grid_search = GridSearchCV(estimator=rf_model, param_grid=param_grid, cv=5)\n","\n","# Lakukan pencarian parameter terbaik\n","grid_search.fit(X_train, y_train)"],"metadata":{"id":"iKHZBvDmMxB8","executionInfo":{"status":"ok","timestamp":1714501658052,"user_tz":-480,"elapsed":85262,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"colab":{"base_uri":"https://localhost:8080/","height":192},"outputId":"f5b59697-3a16-46a0-f8a6-89507da8e42e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_split.py:700: UserWarning:\n","\n","The least populated class in y has only 1 members, which is less than n_splits=5.\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n","             param_grid={'max_depth': [None, 10, 20],\n","                         'min_samples_leaf': [1, 2, 4],\n","                         'min_samples_split': [2, 5, 10],\n","                         'n_estimators': [50, 100, 200]})"],"text/html":["<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n","             param_grid={&#x27;max_depth&#x27;: [None, 10, 20],\n","                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n","                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n","                         &#x27;n_estimators&#x27;: [50, 100, 200]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n","             param_grid={&#x27;max_depth&#x27;: [None, 10, 20],\n","                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n","                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n","                         &#x27;n_estimators&#x27;: [50, 100, 200]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":196}]},{"cell_type":"markdown","source":[],"metadata":{"id":"KSLp1F_aM0Z5"}},{"cell_type":"markdown","source":["###Feature Selection"],"metadata":{"id":"Ukxk5c5AM1rn"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler, LabelEncoder\n","from sklearn.feature_selection import SelectKBest, chi2\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import classification_report\n","import matplotlib.pyplot as plt\n","\n","# Load dataset\n","# df = pd.read_csv('dataset.csv')\n","\n","# Check for missing values and handle if necessary\n","if df.isnull().sum().sum() > 0:\n","    df = df.dropna()  # Drop rows with missing values or use imputation\n","\n","# Handle non-numeric values (e.g., categorical variables) with Label Encoding\n","label_encoder = LabelEncoder()\n","for col in df.columns:\n","    if df[col].dtype == 'object':\n","        df[col] = label_encoder.fit_transform(df[col])\n","\n","# Separate features and target variable\n","X = df.drop('Stok Terjual', axis=1)  # Replace 'TargetColumnName' with actual target column name\n","y = df['Stok Terjual']  # Replace 'TargetColumnName' with actual target column name\n","\n","# Normalize features using MinMaxScaler\n","scaler = MinMaxScaler()\n","X_norm = scaler.fit_transform(X)\n","\n","# Split the dataset into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X_norm, y, test_size=0.2, random_state=42)\n","\n","# Initialize SelectKBest with chi2 score function\n","selector = SelectKBest(score_func=chi2, k=7)\n","\n","# Fit selector to training data and target\n","selector.fit(X_train, y_train)\n","\n","# Get selected feature indices\n","selected_indices = selector.get_support(indices=True)\n","\n","# Get selected feature names\n","selected_features = X.columns[selected_indices]\n","\n","# Apply feature selection to training and testing sets\n","X_train_selected = X_train[:, selected_indices]\n","X_test_selected = X_test[:, selected_indices]\n","\n","# Initialize a Random Forest Classifier\n","rf_classifier = RandomForestClassifier(random_state=42)\n","\n","# Train the classifier on the selected features\n","rf_classifier.fit(X_train_selected, y_train)\n","\n","# Make predictions on the test set\n","y_pred = rf_classifier.predict(X_test_selected)\n","\n","# Evaluate the model\n","report = classification_report(y_test, y_pred)\n","print(report)\n","\n","# Plot feature importances (if applicable)\n","if hasattr(rf_classifier, 'feature_importances_'):\n","    feature_importances = rf_classifier.feature_importances_\n","    feature_importance_df = pd.DataFrame({'Feature': selected_features, 'Importance': feature_importances})\n","    feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n","\n","    plt.figure(figsize=(10, 6))\n","    plt.barh(feature_importance_df['Feature'], feature_importance_df['Importance'], color='skyblue')\n","    plt.xlabel('Importance')\n","    plt.ylabel('Feature')\n","    plt.title('Feature Importance')\n","    plt.gca().invert_yaxis()\n","    plt.show()\n","\n","# Perform any additional review or analysis as needed\n"],"metadata":{"id":"Drm2BoGEM6tL","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1714501658850,"user_tz":-480,"elapsed":810,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"b5a34722-2ae7-404e-f561-60274d200cd2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning:\n","\n","Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","\n"]},{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         1\n","          33       0.00      0.00      0.00         0\n","          38       0.00      0.00      0.00         1\n","          40       0.00      0.00      0.00         1\n","          43       0.00      0.00      0.00         0\n","          45       0.00      0.00      0.00         1\n","          53       0.00      0.00      0.00         1\n","          54       0.00      0.00      0.00         1\n","          57       0.00      0.00      0.00         0\n","          60       0.00      0.00      0.00         1\n","          63       0.00      0.00      0.00         0\n","          70       0.00      0.00      0.00         1\n","          71       0.00      0.00      0.00         0\n","          74       0.00      0.00      0.00         1\n","          75       0.00      0.00      0.00         0\n","          77       0.00      0.00      0.00         1\n","          80       0.00      0.00      0.00         2\n","          81       0.00      0.00      0.00         1\n","          83       0.00      0.00      0.00         1\n","          87       0.00      0.00      0.00         2\n","          89       0.00      0.00      0.00         1\n","          90       0.00      0.00      0.00         0\n","          91       0.00      0.00      0.00         0\n","          93       0.00      0.00      0.00         1\n","          95       0.00      0.00      0.00         1\n","          96       0.00      0.00      0.00         1\n","          97       0.00      0.00      0.00         1\n","          98       0.00      0.00      0.00         0\n","          99       0.00      0.00      0.00         1\n","         100       0.00      0.00      0.00         1\n","         102       0.00      0.00      0.00         1\n","         103       0.00      0.00      0.00         0\n","         110       1.00      1.00      1.00         1\n","         117       0.00      0.00      0.00         1\n","         119       0.00      0.00      0.00         1\n","         120       0.00      0.00      0.00         1\n","         122       0.00      0.00      0.00         1\n","         123       0.00      0.00      0.00         0\n","         125       0.00      0.00      0.00         0\n","         126       0.00      0.00      0.00         1\n","         133       0.00      0.00      0.00         1\n","         139       0.00      0.00      0.00         0\n","         146       0.00      0.00      0.00         0\n","\n","    accuracy                           0.06        31\n","   macro avg       0.05      0.05      0.05        31\n","weighted avg       0.06      0.06      0.06        31\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"gSDvttBSRMVV"}},{"cell_type":"markdown","source":["###Tuning Hyperparameter"],"metadata":{"id":"NtvUxn_iNGe8"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans, AgglomerativeClustering\n","from sklearn.metrics import silhouette_score, davies_bouldin_score, calinski_harabasz_score\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Assume 'data' is your DataFrame containing the data\n","# Replace 'data' with the actual DataFrame name containing your data\n","data_numeric = dataset.select_dtypes(include=[np.number])\n","data_non_numeric = dataset.select_dtypes(exclude=[np.number])\n","\n","imputer = SimpleImputer(strategy='mean')\n","data_numeric_imputed = pd.DataFrame(imputer.fit_transform(data_numeric), columns=data_numeric.columns)\n","\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(data_numeric_imputed)\n","\n","kmeans = KMeans(n_clusters=4, random_state=42)\n","kmeans.fit(X_scaled)\n","\n","silhouette = silhouette_score(X_scaled, kmeans.labels_)\n","davies_bouldin = davies_bouldin_score(X_scaled, kmeans.labels_)\n","calinski_harabasz = calinski_harabasz_score(X_scaled, kmeans.labels_)\n","\n","print(\"Evaluation Metrics for K-Means:\")\n","print(\"Silhouette Score:\", silhouette)\n","print(\"Davies-Bouldin Index:\", davies_bouldin)\n","print(\"Calinski-Harabasz Index:\", calinski_harabasz)\n","\n","agg_clustering = AgglomerativeClustering(n_clusters=4)\n","agg_clustering.fit(X_scaled)\n","\n","silhouette_agg = silhouette_score(X_scaled, agg_clustering.labels_)\n","davies_bouldin_agg = davies_bouldin_score(X_scaled, agg_clustering.labels_)\n","calinski_harabasz_agg = calinski_harabasz_score(X_scaled, agg_clustering.labels_)\n","\n","print(\"\\nEvaluation Metrics for Hierarchical Clustering:\")\n","print(\"Silhouette Score:\", silhouette_agg)\n","print(\"Davies-Bouldin Index:\", davies_bouldin_agg)\n","print(\"Calinski-Harabasz Index:\", calinski_harabasz_agg)\n","\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x=X_scaled[:, 0], y=X_scaled[:, 1], hue=kmeans.labels_, palette='viridis', legend='full')\n","plt.title('K-Means Clustering')\n","plt.xlabel('Feature 1')\n","plt.ylabel('Feature 2')\n","plt.show()\n","\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x=X_scaled[:, 0], y=X_scaled[:, 1], hue=agg_clustering.labels_, palette='viridis', legend='full')\n","plt.title('Hierarchical Clustering')\n","plt.xlabel('Feature 1')\n","plt.ylabel('Feature 2')\n","plt.show()\n"],"metadata":{"id":"vJk6fK4gNLqG","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1714501659614,"user_tz":-480,"elapsed":773,"user":{"displayName":"Andre Firmansyah","userId":"07021575257056836765"}},"outputId":"4a3dce59-cc06-4a8f-ac71-a96d262c6282"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]},{"output_type":"stream","name":"stdout","text":["Evaluation Metrics for K-Means:\n","Silhouette Score: 0.5385543780408032\n","Davies-Bouldin Index: 0.5478868276953544\n","Calinski-Harabasz Index: 417.93878381418216\n","\n","Evaluation Metrics for Hierarchical Clustering:\n","Silhouette Score: 0.5462274209863961\n","Davies-Bouldin Index: 0.5256373679541388\n","Calinski-Harabasz Index: 377.66112666461083\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"4R6aDouVNTqS"}},{"cell_type":"markdown","source":["##Determine Next Steps"],"metadata":{"id":"51Pz-PSTNiBm"}},{"cell_type":"markdown","source":["Pertama, langkah awal adalah memahami secara mendalam struktur dan informasi yang terdapat dalam dataset. Ini mencakup memeriksa jumlah baris dan kolom, tipe data setiap kolom, apakah ada nilai yang hilang atau duplikat, dan memahami arti dari setiap kolom seperti \"Tanggal\", \"Nama Item\", \"Harga Satuan\", \"Total Stok\", \"Stok Terjual\", \"Sisa Stok\", dan \"Perkiraaan Pendapatan\".\n","\n","Setelah itu, dilakukan langkah preprocessing data untuk mempersiapkan data sebelum analisis lebih lanjut. Hal ini dapat mencakup penghapusan atau penanganan nilai yang hilang, transformasi tipe data, normalisasi data jika diperlukan, dan langkah-langkah preprocessing lainnya.\n","\n","Selanjutnya, analisis deskriptif dilakukan untuk mendapatkan wawasan yang lebih dalam tentang dataset. Ini mencakup melihat distribusi data, statistik ringkasan seperti rata-rata, median, dan deviasi standar, serta visualisasi data seperti histogram, diagram batang, dan sebagainya.\n","\n","Selanjutnya, segmentasi data dapat dilakukan jika ada karakteristik tertentu yang ingin dianalisis lebih jauh, seperti segmentasi berdasarkan jenis produk, periode waktu tertentu, atau wilayah geografis.\n","\n","Jika tujuan analisis adalah untuk memprediksi atau mengklasifikasikan sesuatu, seperti prediksi penjualan atau klasifikasi item berdasarkan fitur-fitur tertentu, maka langkah selanjutnya adalah membangun model prediksi yang sesuai. Ini melibatkan pemilihan fitur, pembagian data menjadi data pelatihan dan pengujian, serta evaluasi kinerja model.\n","\n","Setelah membangun model, langkah optimasi dan evaluasi dilakukan untuk memastikan kinerja model yang baik. Ini melibatkan tuning parameter model, melakukan validasi silang (cross-validation), dan evaluasi menggunakan metrik yang sesuai seperti akurasi, presisi, atau recall.\n","\n","Terakhir, hasil analisis dan temuan yang diperoleh dari dataset dapat dirangkum dalam laporan yang mencakup interpretasi hasil, temuan kunci, rekomendasi berdasarkan data, dan langkah-langkah tindak lanjut yang disarankan.\n","\n","Setiap langkah tersebut di atas akan disesuaikan dengan tujuan analisis dan konteks dari dataset \"DATASET ENTERPRISE\" yang Anda miliki. Semoga langkah-langkah tersebut dapat memberikan panduan yang berguna dalam mengeksplorasi dan menganalisis dataset Anda."],"metadata":{"id":"w4HmCsaRNjdG"}}]}